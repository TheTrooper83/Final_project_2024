{"trial_id": "14", "hyperparameters": {"space": [{"class_name": "Choice", "config": {"name": "conv_1_filter", "default": 32, "conditions": [], "values": [32, 64], "ordered": true}}, {"class_name": "Choice", "config": {"name": "conv_1_kernal", "default": 3, "conditions": [], "values": [3, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "Conv_1_padding", "default": "same", "conditions": [], "values": ["same", "valid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "pool_1_size", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_1_padding", "default": "same", "conditions": [], "values": ["same", "valid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "conv_2_filter", "default": 64, "conditions": [], "values": [64, 128], "ordered": true}}, {"class_name": "Choice", "config": {"name": "conv_2_kernal", "default": 3, "conditions": [], "values": [3, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "Conv_2_padding", "default": "same", "conditions": [], "values": ["same", "valid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "pool_2_size", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_2_padding", "default": "same", "conditions": [], "values": ["same", "valid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "conv_3_filter", "default": 128, "conditions": [], "values": [128, 256], "ordered": true}}, {"class_name": "Choice", "config": {"name": "conv_3_kernal", "default": 3, "conditions": [], "values": [3, 5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "Conv_3_padding", "default": "same", "conditions": [], "values": ["same", "valid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "pool_3_size", "default": 2, "conditions": [], "values": [2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "pool_3_padding", "default": "same", "conditions": [], "values": ["same", "valid"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "dense_1", "default": 256, "conditions": [], "values": [256, 512, 1024], "ordered": true}}], "values": {"conv_1_filter": 32, "conv_1_kernal": 3, "Conv_1_padding": "valid", "pool_1_size": 2, "pool_1_padding": "valid", "conv_2_filter": 128, "conv_2_kernal": 5, "Conv_2_padding": "valid", "pool_2_size": 2, "pool_2_padding": "same", "conv_3_filter": 256, "conv_3_kernal": 5, "Conv_3_padding": "valid", "pool_3_size": 3, "pool_3_padding": "valid", "dense_1": 256}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"c:\\Users\\seand\\.conda\\envs\\Final_project_keras_tuner\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\seand\\.conda\\envs\\Final_project_keras_tuner\\lib\\site-packages\\keras_tuner\\src\\engine\\base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"c:\\Users\\seand\\.conda\\envs\\Final_project_keras_tuner\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"c:\\Users\\seand\\.conda\\envs\\Final_project_keras_tuner\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n  File \"c:\\Users\\seand\\.conda\\envs\\Final_project_keras_tuner\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n  File \"c:\\Users\\seand\\.conda\\envs\\Final_project_keras_tuner\\lib\\site-packages\\keras_tuner\\src\\engine\\tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n  File \"C:\\Users\\seand\\AppData\\Local\\Temp\\ipykernel_18800\\1983637935.py\", line 28, in simple_model_Relu_hyper_p\n    model.add(layers.MaxPooling2D(pool_size=hp.Choice('pool_3_size', [2,3]), strides=(2,2),\n  File \"c:\\Users\\seand\\.conda\\envs\\Final_project_keras_tuner\\lib\\site-packages\\tensorflow\\python\\trackable\\base.py\", line 205, in _method_wrapper\n    result = method(self, *args, **kwargs)\n  File \"c:\\Users\\seand\\.conda\\envs\\Final_project_keras_tuner\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"c:\\Users\\seand\\.conda\\envs\\Final_project_keras_tuner\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py\", line 1969, in _create_c_op\n    raise ValueError(e.message)\nValueError: Exception encountered when calling layer \"max_pooling2d_2\" (type MaxPooling2D).\n\nNegative dimension size caused by subtracting 3 from 2 for '{{node max_pooling2d_2/MaxPool}} = MaxPool[T=DT_FLOAT, data_format=\"NHWC\", explicit_paddings=[], ksize=[1, 3, 3, 1], padding=\"VALID\", strides=[1, 2, 2, 1]](Placeholder)' with input shapes: [?,2,2,256].\n\nCall arguments received by layer \"max_pooling2d_2\" (type MaxPooling2D):\n  \u2022 inputs=tf.Tensor(shape=(None, 2, 2, 256), dtype=float32)\n"}